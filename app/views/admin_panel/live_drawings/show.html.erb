<%# app/views/admin_panel/live_drawings/show.html.erb %>
<div class="live-drawing-container">
  <div class="page-header">
    <h1>Live Drawing - <%= @event.name %></h1>
  </div>

  <div class="stats-container">
    <div class="stat-card">
      <div class="stat-title">Total Peserta</div>
      <div class="stat-value"><%= @total_participants %></div>
    </div>
    <div class="stat-card">
      <div class="stat-title">Peserta Tersisa</div>
      <div class="stat-value" id="remaining-participants"><%= @remaining_participants %></div>
    </div>
    <div class="stat-card">
      <div class="stat-title">Hadiah Terundi</div>
      <div class="stat-value" id="drawn-prizes"><%= @drawn_prizes %></div>
    </div>
    <div class="stat-card">
      <div class="stat-title">Hadiah Tersisa</div>
      <div class="stat-value" id="remaining-prizes"><%= @remaining_prizes %></div>
    </div>
  </div>

  <div class="drawing-area">
    <div id="winner-announcement" class="winner-announcement" style="display: none;">
      <h2>Selamat Kepada Pemenang!</h2>
      <div class="winner-details">
        <div class="winner-number"></div>
        <div class="winner-name"></div>
        <div class="prize-name"></div>
      </div>
    </div>

    <div class="prizes-list">
      <h2>Daftar Hadiah</h2>
      <div class="prizes-grid">
        <% @prizes.each do |prize| %>
          <div class="prize-card" id="prize-<%= prize.id %>" data-prize-id="<%= prize.id %>">
            <h3><%= prize.name %></h3>
            <p><%= prize.description %></p>
            <div class="prize-status">
              <% if prize.winnings.any? %>
                <div class="winner-info">
                  <span class="label">Pemenang:</span>
                  <span class="value">
                    <% prize.winnings.each_with_index do |winning, index| %>
                      <%= winning.participant.name %> (<%= winning.participant.registration_number %>)<%= ", " if index < prize.winnings.size - 1 %>
                    <% end %>
                  </span>
                </div>
                <button class="reset-button" data-prize-id="<%= prize.id %>">Reset Undian</button>
              <% else %>
                <button class="draw-button" data-prize-id="<%= prize.id %>">Undi Sekarang</button>
              <% end %>
            </div>
          </div>
        <% end %>
      </div>
    </div>
  </div>
</div>

<% content_for :styles do %>
  <style>
    .live-drawing-container {
      padding: 20px;
      max-width: 1200px;
      margin: 0 auto;
    }

    .page-header {
      margin-bottom: 30px;
    }

    .page-header h1 {
      color: #2c3e50;
      font-size: 2em;
      margin: 0;
    }

    .stats-container {
      display: grid;
      grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
      gap: 20px;
      margin-bottom: 40px;
    }

    .stat-card {
      background: white;
      border-radius: 10px;
      padding: 20px;
      text-align: center;
      box-shadow: 0 2px 4px rgba(0,0,0,0.1);
      transition: transform 0.2s;
    }

    .stat-card:hover {
      transform: translateY(-2px);
    }

    .stat-title {
      color: #666;
      font-size: 0.9em;
      margin-bottom: 10px;
    }

    .stat-value {
      color: #2c3e50;
      font-size: 2em;
      font-weight: bold;
    }

    .drawing-area {
      background: white;
      border-radius: 10px;
      padding: 30px;
      box-shadow: 0 2px 4px rgba(0,0,0,0.1);
    }

    .winner-announcement {
      text-align: center;
      padding: 40px;
      margin-bottom: 30px;
      background: #f8f9fa;
      border-radius: 10px;
      display: none;
    }

    .winner-announcement.active {
      display: block;
      animation: fadeIn 0.5s ease-in;
    }

    .winner-details {
      margin-top: 20px;
    }

    .winner-number {
      font-size: 3em;
      font-weight: bold;
      color: #2c3e50;
      margin-bottom: 10px;
    }

    .winner-name {
      font-size: 1.5em;
      color: #666;
      margin-bottom: 5px;
    }

    .prize-name {
      font-size: 1.2em;
      color: #28a745;
    }

    .prizes-list {
      margin-top: 30px;
    }

    .prizes-list h2 {
      color: #2c3e50;
      margin-bottom: 20px;
    }

    .prizes-grid {
      display: grid;
      grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
      gap: 20px;
    }

    .prize-card {
      background: #f8f9fa;
      border-radius: 8px;
      padding: 20px;
      transition: transform 0.2s;
    }

    .prize-card:hover {
      transform: translateY(-2px);
    }

    .prize-card h3 {
      color: #2c3e50;
      margin: 0 0 10px 0;
    }

    .prize-card p {
      color: #666;
      margin: 0 0 15px 0;
      font-size: 0.9em;
    }

    .prize-status {
      margin-top: 15px;
    }

    .winner-info {
      margin-bottom: 10px;
    }

    .winner-info .label {
      color: #666;
      font-size: 0.9em;
    }

    .winner-info .value {
      color: #28a745;
      font-weight: bold;
    }

    .draw-button, .reset-button {
      width: 100%;
      padding: 10px;
      border: none;
      border-radius: 5px;
      font-weight: bold;
      cursor: pointer;
      transition: background-color 0.2s;
    }

    .draw-button {
      background-color: #007bff;
      color: white;
    }

    .draw-button:hover {
      background-color: #0056b3;
    }

    .reset-button {
      background-color: #dc3545;
      color: white;
    }

    .reset-button:hover {
      background-color: #c82333;
    }

    @keyframes fadeIn {
      from { opacity: 0; transform: translateY(-20px); }
      to { opacity: 1; transform: translateY(0); }
    }

    .drawing-animation {
      animation: pulse 0.5s infinite;
    }

    @keyframes pulse {
      0% { transform: scale(1); }
      50% { transform: scale(1.05); }
      100% { transform: scale(1); }
    }
  </style>
<% end %>

<% content_for :scripts do %>
  <script>
    document.addEventListener('DOMContentLoaded', function() {
      const csrfToken = document.querySelector('meta[name="csrf-token"]').content;

      // Fungsi untuk mengacak nomor
      function shuffleNumber() {
        return Math.floor(Math.random() * 9000) + 1000;
      }

      // Fungsi untuk animasi pengundian
      function animateDrawing(callback) {
        const winnerNumber = document.querySelector('.winner-number');
        let iterations = 0;
        const maxIterations = 20;
        
        const interval = setInterval(() => {
          winnerNumber.textContent = shuffleNumber();
          iterations++;
          
          if (iterations >= maxIterations) {
            clearInterval(interval);
            callback();
          }
        }, 100);
      }

      // Handler untuk tombol undi
      document.querySelectorAll('.draw-button').forEach(button => {
        button.addEventListener('click', function() {
          const prizeId = this.dataset.prizeId;
          const announcement = document.getElementById('winner-announcement');
          
          // Tampilkan area pengumuman dan mulai animasi
          announcement.style.display = 'block';
          announcement.querySelector('.winner-number').textContent = shuffleNumber();
          
          // Mulai animasi pengundian
          animateDrawing(() => {
            // Setelah animasi selesai, lakukan pengundian sebenarnya
            fetch(`/admin_panel/events/<%= @event.id %>/live_drawing/draw_prize/${prizeId}`, {
              method: 'POST',
              headers: {
                'X-CSRF-Token': csrfToken,
                'Content-Type': 'application/json'
              }
            })
            .then(response => response.json())
            .then(data => {
              if (data.success) {
                // Update tampilan dengan pemenang
                announcement.querySelector('.winner-number').textContent = data.winner.number;
                announcement.querySelector('.winner-name').textContent = data.winner.name;
                announcement.querySelector('.prize-name').textContent = data.winner.prize_name;
                
                // Update statistik
                document.getElementById('remaining-participants').textContent = data.remaining_participants;
                document.getElementById('drawn-prizes').textContent = parseInt(document.getElementById('drawn-prizes').textContent) + 1;
                document.getElementById('remaining-prizes').textContent = data.remaining_prizes;
                
                // Update tampilan kartu hadiah
                const prizeCard = document.getElementById(`prize-${prizeId}`);
                prizeCard.querySelector('.prize-status').innerHTML = `
                  <div class="winner-info">
                    <span class="label">Pemenang:</span>
                    <span class="value">${data.winner.name} (${data.winner.number})</span>
                  </div>
                  <button class="reset-button" data-prize-id="${prizeId}">Reset Undian</button>
                `;
                
                // Tambahkan event listener untuk tombol reset yang baru
                attachResetListener(prizeCard.querySelector('.reset-button'));
              } else {
                alert(data.error);
              }
            })
            .catch(error => {
              console.error('Error:', error);
              alert('Terjadi kesalahan saat mengundi');
            });
          });
        });
      });

      // Fungsi untuk menambahkan event listener ke tombol reset
      function attachResetListener(button) {
        button.addEventListener('click', function() {
          const prizeId = this.dataset.prizeId;
          
          if (confirm('Apakah Anda yakin ingin mereset undian ini?')) {
            fetch(`/admin_panel/events/<%= @event.id %>/live_drawing/reset_prize/${prizeId}`, {
              method: 'POST',
              headers: {
                'X-CSRF-Token': csrfToken,
                'Accept': 'application/json',
                'Content-Type': 'application/json'
              }
            })
            .then(response => response.json())
            .then(data => {
              if (data.success) {
                // Update tampilan
                const prizeCard = document.getElementById(`prize-${prizeId}`);
                prizeCard.querySelector('.prize-status').innerHTML = `
                  <button class="draw-button" data-prize-id="${prizeId}">Undi Sekarang</button>
                `;
                
                // Update statistik
                document.getElementById('drawn-prizes').textContent = parseInt(document.getElementById('drawn-prizes').textContent) - 1;
                document.getElementById('remaining-prizes').textContent = parseInt(document.getElementById('remaining-prizes').textContent) + 1;
                
                // Sembunyikan pengumuman pemenang jika sedang ditampilkan
                document.getElementById('winner-announcement').style.display = 'none';
                
                // Tambahkan event listener untuk tombol undi yang baru
                const newDrawButton = prizeCard.querySelector('.draw-button');
                newDrawButton.addEventListener('click', drawButtonHandler);
              } else {
                alert(data.error);
              }
            })
            .catch(error => {
              console.error('Error:', error);
              alert('Terjadi kesalahan saat mereset undian');
            });
          }
        });
      }

      // Handler untuk tombol undi
      function drawButtonHandler() {
        const prizeId = this.dataset.prizeId;
        const announcement = document.getElementById('winner-announcement');
        
        // Tampilkan area pengumuman dan mulai animasi
        announcement.style.display = 'block';
        announcement.querySelector('.winner-number').textContent = shuffleNumber();
        
        // Mulai animasi pengundian
        animateDrawing(() => {
          // Setelah animasi selesai, lakukan pengundian sebenarnya
          fetch(`/admin_panel/events/<%= @event.id %>/live_drawing/draw_prize/${prizeId}`, {
            method: 'POST',
            headers: {
              'X-CSRF-Token': csrfToken,
              'Content-Type': 'application/json'
            }
          })
          .then(response => response.json())
          .then(data => {
            if (data.success) {
              // Update tampilan dengan pemenang
              announcement.querySelector('.winner-number').textContent = data.winner.number;
              announcement.querySelector('.winner-name').textContent = data.winner.name;
              announcement.querySelector('.prize-name').textContent = data.winner.prize_name;
              
              // Update statistik
              document.getElementById('remaining-participants').textContent = data.remaining_participants;
              document.getElementById('drawn-prizes').textContent = parseInt(document.getElementById('drawn-prizes').textContent) + 1;
              document.getElementById('remaining-prizes').textContent = data.remaining_prizes;
              
              // Update tampilan kartu hadiah
              const prizeCard = document.getElementById(`prize-${prizeId}`);
              prizeCard.querySelector('.prize-status').innerHTML = `
                <div class="winner-info">
                  <span class="label">Pemenang:</span>
                  <span class="value">${data.winner.name} (${data.winner.number})</span>
                </div>
                <button class="reset-button" data-prize-id="${prizeId}">Reset Undian</button>
              `;
              
              // Tambahkan event listener untuk tombol reset yang baru
              attachResetListener(prizeCard.querySelector('.reset-button'));
            } else {
              alert(data.error);
            }
          })
          .catch(error => {
            console.error('Error:', error);
            alert('Terjadi kesalahan saat mengundi');
          });
        });
      }

      // Tambahkan event listener untuk tombol reset yang sudah ada
      document.querySelectorAll('.reset-button').forEach(button => {
        attachResetListener(button);
      });

      // Tambahkan event listener untuk tombol undi yang sudah ada
      document.querySelectorAll('.draw-button').forEach(button => {
        button.addEventListener('click', drawButtonHandler);
      });
    });
  </script>
<% end %> 