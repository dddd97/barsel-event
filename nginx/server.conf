# Clean Server Nginx Configuration untuk NPM Integration
upstream frontend {
    server 192.168.188.229:8080 max_fails=2 fail_timeout=10s;
    keepalive 32;
    keepalive_requests 100;
    keepalive_timeout 60s;
}

upstream rails_api {
    server 192.168.188.229:3000 max_fails=2 fail_timeout=10s;
    keepalive 64;
    keepalive_requests 1000;
    keepalive_timeout 120s;
}

# Rate limiting - exclude local/server IPs
geo $limited {
    default 1;
    127.0.0.1/32 0;
    192.168.188.0/24 0;
}

map $limited $limit_key {
    0 "";
    1 $binary_remote_addr;
}

limit_req_zone $limit_key zone=api:10m rate=10r/s;
limit_req_zone $limit_key zone=general:10m rate=50r/s;

server {
    # Listen on all interfaces for NPM to connect
    listen 80 default_server;
    listen [::]:80 default_server;
    
    # Accept all server names
    server_name _;
    
    # Buffer sizes
    client_body_buffer_size 128k;
    client_max_body_size 50m;
    client_header_buffer_size 4k;
    large_client_header_buffers 4 16k;
    
    # Optimized timeouts
    client_body_timeout 60s;
    client_header_timeout 30s;
    send_timeout 60s;
    
    # Proxy settings
    proxy_connect_timeout 10s;
    proxy_send_timeout 90s;
    proxy_read_timeout 90s;
    
    # Buffering
    proxy_buffering on;
    proxy_buffer_size 128k;
    proxy_buffers 4 256k;
    proxy_busy_buffers_size 256k;
    
    # Docker DNS
    resolver 127.0.0.11 valid=30s ipv6=off;
    
    # Proxy headers
    proxy_http_version 1.1;
    
    # Trust NPM
    set_real_ip_from 127.0.0.1;
    set_real_ip_from ::1;
    real_ip_header X-Real-IP;
    real_ip_recursive on;
    
    # Handle HTTPS properly
    set $proto_header $http_x_forwarded_proto;
    if ($proto_header = '') {
        set $proto_header $scheme;
    }
    
    # Health check
    location = /nginx-health {
        access_log off;
        return 200 'OK';
        add_header Content-Type text/plain;
    }
    
    # Rails API
    location ^~ /api/ {
        proxy_connect_timeout 10s;
        proxy_send_timeout 90s;
        proxy_read_timeout 90s;
        
        limit_req zone=api burst=20 nodelay;
        
        proxy_next_upstream error timeout http_502 http_503;
        proxy_next_upstream_tries 2;
        
        proxy_pass http://rails_api;
        
        proxy_set_header Host $http_host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $proto_header;
        proxy_set_header X-Forwarded-Port $server_port;
        
        proxy_pass_header Set-Cookie;
        proxy_set_header Cookie $http_cookie;
        
        add_header Access-Control-Allow-Origin * always;
        add_header Access-Control-Allow-Credentials true always;
        add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS, PATCH" always;
        
        if ($request_method = 'OPTIONS') {
            add_header Access-Control-Allow-Origin *;
            add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS, PATCH";
            add_header Access-Control-Allow-Headers "*";
            add_header Access-Control-Max-Age 86400;
            return 204;
        }
    }
    
    # Rails storage
    location ^~ /rails/ {
        proxy_connect_timeout 10s;
        proxy_send_timeout 90s;
        proxy_read_timeout 90s;
        
        proxy_pass http://rails_api;
        proxy_set_header Host $http_host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $proto_header;
        
        proxy_pass_header Set-Cookie;
        add_header Access-Control-Allow-Origin * always;
    }
    
    # Static storage
    location ^~ /storage/ {
        root /home/dannu/-dddd97-barsel-event-fedora;
        expires 1y;
        add_header Cache-Control "public, immutable";
        add_header Access-Control-Allow-Origin * always;
        
        sendfile on;
        tcp_nopush on;
        
        try_files $uri @storage_fallback;
    }
    
    location @storage_fallback {
        proxy_pass http://rails_api;
        proxy_set_header Host $http_host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $proto_header;
    }
    
    # Frontend SPA - proxy to container
    location / {
        proxy_pass http://frontend;
        proxy_set_header Host $http_host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $proto_header;
        
        proxy_connect_timeout 10s;
        proxy_send_timeout 90s;
        proxy_read_timeout 90s;
        
        add_header Access-Control-Allow-Origin * always;
    }
    
    # Error pages
    error_page 502 503 504 /50x.html;
    location = /50x.html {
        internal;
        default_type text/html;
        return 502 "Service Unavailable";
    }
}